import { ExecSyncOptions, ExecOptions as ExecAsyncOptions } from 'child_process';

export const asyncApi: <F = string>(config?: AsyncConfigType<F>) => AsyncApiType<F>;
export const syncApi: <F = string>(config?: SyncConfigType<F>) => SyncApiType<F>;
export const formats: FormatsType;

type AsyncConfigType<F> = {
  format?: FormatType<F>;
  options?: ExecAsyncOptions
};

type SyncConfigType<F> = {
  format?: FormatType<F>;
  options?: ExecSyncOptions;
};

type FormatType<F> = (output: string | Buffer) => F;

type FormatsType = {
  bufferFormat: FormatType<Buffer>;
  jsonFormat: FormatType<any>;
  rawFormat: FormatType<string | Buffer>;
  stringFormat: FormatType<string>;
};

type AsyncApiType<F> = {
  access: (...args: (string | Record<string, any>)[]) => Promise<F>;
  adduser: (...args: (string | Record<string, any>)[]) => Promise<F>;
  audit: (...args: (string | Record<string, any>)[]) => Promise<F>;
  bugs: (...args: (string | Record<string, any>)[]) => Promise<F>;
  cache: (...args: (string | Record<string, any>)[]) => Promise<F>;
  ci: (...args: (string | Record<string, any>)[]) => Promise<F>;
  completion: (...args: (string | Record<string, any>)[]) => Promise<F>;
  config: (...args: (string | Record<string, any>)[]) => Promise<F>;
  dedupe: (...args: (string | Record<string, any>)[]) => Promise<F>;
  deprecate: (...args: (string | Record<string, any>)[]) => Promise<F>;
  diff: (...args: (string | Record<string, any>)[]) => Promise<F>;
  distTag: (...args: (string | Record<string, any>)[]) => Promise<F>;
  docs: (...args: (string | Record<string, any>)[]) => Promise<F>;
  doctor: (...args: (string | Record<string, any>)[]) => Promise<F>;
  edit: (...args: (string | Record<string, any>)[]) => Promise<F>;
  exec: (...args: (string | Record<string, any>)[]) => Promise<F>;
  explain: (...args: (string | Record<string, any>)[]) => Promise<F>;
  explore: (...args: (string | Record<string, any>)[]) => Promise<F>;
  findDupes: (...args: (string | Record<string, any>)[]) => Promise<F>;
  fund: (...args: (string | Record<string, any>)[]) => Promise<F>;
  get: (...args: (string | Record<string, any>)[]) => Promise<F>;
  help: (...args: (string | Record<string, any>)[]) => Promise<F>;
  helpSearch: (...args: (string | Record<string, any>)[]) => Promise<F>;
  hook: (...args: (string | Record<string, any>)[]) => Promise<F>;
  init: (...args: (string | Record<string, any>)[]) => Promise<F>;
  install: (...args: (string | Record<string, any>)[]) => Promise<F>;
  installCiTest: (...args: (string | Record<string, any>)[]) => Promise<F>;
  installTest: (...args: (string | Record<string, any>)[]) => Promise<F>;
  link: (...args: (string | Record<string, any>)[]) => Promise<F>;
  ll: (...args: (string | Record<string, any>)[]) => Promise<F>;
  login: (...args: (string | Record<string, any>)[]) => Promise<F>;
  logout: (...args: (string | Record<string, any>)[]) => Promise<F>;
  ls: (...args: (string | Record<string, any>)[]) => Promise<F>;
  org: (...args: (string | Record<string, any>)[]) => Promise<F>;
  outdated: (...args: (string | Record<string, any>)[]) => Promise<F>;
  owner: (...args: (string | Record<string, any>)[]) => Promise<F>;
  pack: (...args: (string | Record<string, any>)[]) => Promise<F>;
  ping: (...args: (string | Record<string, any>)[]) => Promise<F>;
  pkg: (...args: (string | Record<string, any>)[]) => Promise<F>;
  prefix: (...args: (string | Record<string, any>)[]) => Promise<F>;
  profile: (...args: (string | Record<string, any>)[]) => Promise<F>;
  prune: (...args: (string | Record<string, any>)[]) => Promise<F>;
  publish: (...args: (string | Record<string, any>)[]) => Promise<F>;
  query: (...args: (string | Record<string, any>)[]) => Promise<F>;
  rebuild: (...args: (string | Record<string, any>)[]) => Promise<F>;
  repo: (...args: (string | Record<string, any>)[]) => Promise<F>;
  restart: (...args: (string | Record<string, any>)[]) => Promise<F>;
  root: (...args: (string | Record<string, any>)[]) => Promise<F>;
  runScript: (...args: (string | Record<string, any>)[]) => Promise<F>;
  search: (...args: (string | Record<string, any>)[]) => Promise<F>;
  set: (...args: (string | Record<string, any>)[]) => Promise<F>;
  shrinkwrap: (...args: (string | Record<string, any>)[]) => Promise<F>;
  star: (...args: (string | Record<string, any>)[]) => Promise<F>;
  stars: (...args: (string | Record<string, any>)[]) => Promise<F>;
  start: (...args: (string | Record<string, any>)[]) => Promise<F>;
  stop: (...args: (string | Record<string, any>)[]) => Promise<F>;
  team: (...args: (string | Record<string, any>)[]) => Promise<F>;
  test: (...args: (string | Record<string, any>)[]) => Promise<F>;
  token: (...args: (string | Record<string, any>)[]) => Promise<F>;
  uninstall: (...args: (string | Record<string, any>)[]) => Promise<F>;
  unpublish: (...args: (string | Record<string, any>)[]) => Promise<F>;
  unstar: (...args: (string | Record<string, any>)[]) => Promise<F>;
  update: (...args: (string | Record<string, any>)[]) => Promise<F>;
  version: (...args: (string | Record<string, any>)[]) => Promise<F>;
  view: (...args: (string | Record<string, any>)[]) => Promise<F>;
  whoami: (...args: (string | Record<string, any>)[]) => Promise<F>;
};

type SyncApiType<F> = {
  access: (...args: (string | Record<string, any>)[]) => F;
  adduser: (...args: (string | Record<string, any>)[]) => F;
  audit: (...args: (string | Record<string, any>)[]) => F;
  bugs: (...args: (string | Record<string, any>)[]) => F;
  cache: (...args: (string | Record<string, any>)[]) => F;
  ci: (...args: (string | Record<string, any>)[]) => F;
  completion: (...args: (string | Record<string, any>)[]) => F;
  config: (...args: (string | Record<string, any>)[]) => F;
  dedupe: (...args: (string | Record<string, any>)[]) => F;
  deprecate: (...args: (string | Record<string, any>)[]) => F;
  diff: (...args: (string | Record<string, any>)[]) => F;
  distTag: (...args: (string | Record<string, any>)[]) => F;
  docs: (...args: (string | Record<string, any>)[]) => F;
  doctor: (...args: (string | Record<string, any>)[]) => F;
  edit: (...args: (string | Record<string, any>)[]) => F;
  exec: (...args: (string | Record<string, any>)[]) => F;
  explain: (...args: (string | Record<string, any>)[]) => F;
  explore: (...args: (string | Record<string, any>)[]) => F;
  findDupes: (...args: (string | Record<string, any>)[]) => F;
  fund: (...args: (string | Record<string, any>)[]) => F;
  get: (...args: (string | Record<string, any>)[]) => F;
  help: (...args: (string | Record<string, any>)[]) => F;
  helpSearch: (...args: (string | Record<string, any>)[]) => F;
  hook: (...args: (string | Record<string, any>)[]) => F;
  init: (...args: (string | Record<string, any>)[]) => F;
  install: (...args: (string | Record<string, any>)[]) => F;
  installCiTest: (...args: (string | Record<string, any>)[]) => F;
  installTest: (...args: (string | Record<string, any>)[]) => F;
  link: (...args: (string | Record<string, any>)[]) => F;
  ll: (...args: (string | Record<string, any>)[]) => F;
  login: (...args: (string | Record<string, any>)[]) => F;
  logout: (...args: (string | Record<string, any>)[]) => F;
  ls: (...args: (string | Record<string, any>)[]) => F;
  org: (...args: (string | Record<string, any>)[]) => F;
  outdated: (...args: (string | Record<string, any>)[]) => F;
  owner: (...args: (string | Record<string, any>)[]) => F;
  pack: (...args: (string | Record<string, any>)[]) => F;
  ping: (...args: (string | Record<string, any>)[]) => F;
  pkg: (...args: (string | Record<string, any>)[]) => F;
  prefix: (...args: (string | Record<string, any>)[]) => F;
  profile: (...args: (string | Record<string, any>)[]) => F;
  prune: (...args: (string | Record<string, any>)[]) => F;
  publish: (...args: (string | Record<string, any>)[]) => F;
  query: (...args: (string | Record<string, any>)[]) => F;
  rebuild: (...args: (string | Record<string, any>)[]) => F;
  repo: (...args: (string | Record<string, any>)[]) => F;
  restart: (...args: (string | Record<string, any>)[]) => F;
  root: (...args: (string | Record<string, any>)[]) => F;
  runScript: (...args: (string | Record<string, any>)[]) => F;
  search: (...args: (string | Record<string, any>)[]) => F;
  set: (...args: (string | Record<string, any>)[]) => F;
  shrinkwrap: (...args: (string | Record<string, any>)[]) => F;
  star: (...args: (string | Record<string, any>)[]) => F;
  stars: (...args: (string | Record<string, any>)[]) => F;
  start: (...args: (string | Record<string, any>)[]) => F;
  stop: (...args: (string | Record<string, any>)[]) => F;
  team: (...args: (string | Record<string, any>)[]) => F;
  test: (...args: (string | Record<string, any>)[]) => F;
  token: (...args: (string | Record<string, any>)[]) => F;
  uninstall: (...args: (string | Record<string, any>)[]) => F;
  unpublish: (...args: (string | Record<string, any>)[]) => F;
  unstar: (...args: (string | Record<string, any>)[]) => F;
  update: (...args: (string | Record<string, any>)[]) => F;
  version: (...args: (string | Record<string, any>)[]) => F;
  view: (...args: (string | Record<string, any>)[]) => F;
  whoami: (...args: (string | Record<string, any>)[]) => F;
};